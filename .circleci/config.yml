version: 2.2
jobs:
  build_and_deploy:     
    docker:
        - image: google/cloud-sdk:slim
    steps:
      - checkout
      - run: 
          name: Deploy Docs
          command: |
            echo ${Google_Service_Key} > /tmp/sa_key.json
            gcloud auth activate-service-account --key-file=/tmp/sa_key.json
            rm /tmp/sa_key.json
            gcloud config set project cicdapp123
            gcloud config set compute/zone us-central     
            gcloud --quiet app deploy -v v01

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_and_deploy:
        filters:
          branches:
            only:
              - master
















































# # This config was automatically generated from your source code
# # Stacks detected: deps:python:.
# version: 2.1
# orbs:
#   python: circleci/python@2
# jobs:
#   test-python:
#     # Install dependencies and run tests
#     docker:
#       - image: cimg/python:3.8-node
#     steps:
#       - checkout
#       - python/install-packages
#       - run:
#             name: install
#             command: |
#               apt install -y python3-pip && \
#               python3 -m pip install -r requirements.txt

#       - run: 
#           name: Deploy Docs
#           command: |
#             echo ${GCLOUD_SERVICE_KEY} > /tmp/sa_key.json
#             gcloud auth activate-service-account --key-file=/tmp/sa_key.json
#             rm /tmp/sa_key.json
#             gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
#             gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
#             gcloud --quiet app deploy
#       #     name: Run tests
#       #     command: pytest --junitxml=junit.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
#       # - store_test_results:
#       #     path: junit.xml
# #   deploy:
# #     # This is an example deploy job, not actually used by the workflow
# #     docker:
# #       - image: cimg/base:stable
# #     steps:
# #       # Replace this with steps to deploy to users
# #       - run:
# #           name: deploy
# #           command: '#e.g. ./deploy.sh'
# # workflows:
# #   build-and-test:
# #     jobs:
# #       - test-python
# #     # - deploy:
# #     #     requires:
# #     #       - test-python
